
         set.add("btc");
         Map map = new Apirequest().getexchangerates(set);
        System.out.println(map.tostring);
        calcexchangerates calcexchangerates = new calcexchangerates();
        calcexchangerates.calculate(85);

        private static String key = "kfvmimvkf";
        static final String key = "dfdafd";

        import java.util.Collections;
        import java.util.HastSet;
        import java.util.Map;
        import java.util.Set;

        public class CalcExchangeRates (
                private static final String[] rates=new String[]("usd","czk","huf","btc","pln);
           public void calculate (double eur)
        if(eur<0) {
            System.out.println("input param cannot be a negative value");
            return;
          Set<String> set = new HashSet<>();
          Collections.addAll(set,rates);
          apirequest apirequest=new apirequest();
          map map = apirequest.getexchangerates(set);
          for (string temp:rates)(
                  if(map.containkey(temp))
                      double value= (double)map.get(temp);
                  double result = eur*value;
                  print("eur",temp, eur, result, value);
               private void print(String from, String to, double eur, double result, double rate);
            System.out.println(eur +);

                  )
